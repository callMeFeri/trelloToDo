{"ast":null,"code":"export const reducer = (state, action) => {\n  if (action.type === \"DELETE-COLOUMN\") {\n    console.log(action.category);\n    return {\n      ...state,\n      coloumns: state.coloumns.filter(item => item.text !== action.category)\n    };\n  }\n  if (action.type === \"ADD_TASK\") {\n    let newItem = {\n      type: action.func,\n      id: new Date().getTime().toString(),\n      content: action.text,\n      isEditing: false\n    };\n    return {\n      ...state,\n      text: [...state.text, newItem]\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    return {\n      ...state,\n      text: state.text.filter(item => item.id !== action.id)\n    };\n  }\n  if (action.type === \"EDIT\") {\n    const selectedItem = state.text.find(item => item.id === action.id);\n    selectedItem.isEditing = true;\n    return {\n      ...state\n    };\n  }\n  if (action.type === \"EDIT-DONE\") {\n    state.text.map(item => {\n      if (item.id === action.id) {\n        item.content = action.content;\n        item.isEditing = false;\n      }\n    });\n    return {\n      ...state\n    };\n  }\n  if (action.type === \"CLEAN\") {\n    return {\n      text: [],\n      coloumns: [],\n      boards: [],\n      logedIn: true\n    };\n  }\n  if (action.type === \"CHANGE-PLACE\") {\n    state.text.map(item => {\n      if (item.id === action.id) {\n        item.type = action.newType;\n      }\n    });\n    return {\n      ...state\n    };\n  }\n  if (action.type === \"ADD-COL\") {\n    const findItem = state.coloumns.find(item => item === action.col);\n    const newColoumn = {\n      text: action.text,\n      type: action.model\n    };\n    if (!findItem) {\n      return {\n        ...state,\n        coloumns: [...state.coloumns, newColoumn]\n      };\n    }\n    return {\n      ...state\n    };\n  }\n  if (action.type === \"ADD-BOARD\") {\n    let newBoard = action.text;\n    return {\n      ...state,\n      boards: [...state.boards, newBoard]\n    };\n  }\n  if (action.type === \"ENTER\") {\n    return {\n      ...state,\n      logedIn: true,\n      username: action.uname.uname,\n      id: action.uname.id,\n      pass: action.uname.pass\n    };\n  }\n  if (action.type === \"EXIT\") {\n    return {\n      ...state,\n      logedIn: false\n    };\n  }\n  if (action.type === \"SIGN-UP\") {\n    return {\n      ...state,\n      signingUp: !state.signingUp\n    };\n  }\n};","map":{"version":3,"names":["reducer","state","action","type","console","log","category","coloumns","filter","item","text","newItem","func","id","Date","getTime","toString","content","isEditing","selectedItem","find","map","boards","logedIn","newType","findItem","col","newColoumn","model","newBoard","username","uname","pass","signingUp"],"sources":["C:/Users/Feri/Desktop/react-projects-master/01-trello-to-do/setup/src/reducer.js"],"sourcesContent":["export const reducer = (state, action) => {\r\n  if (action.type === \"DELETE-COLOUMN\") {\r\n    console.log(action.category);\r\n    return {\r\n      ...state,\r\n      coloumns: state.coloumns.filter((item) => item.text !== action.category),\r\n    };\r\n  }\r\n  if (action.type === \"ADD_TASK\") {\r\n    let newItem = {\r\n      type: action.func,\r\n      id: new Date().getTime().toString(),\r\n      content: action.text,\r\n      isEditing: false,\r\n    };\r\n    return {\r\n      ...state,\r\n      text: [...state.text, newItem],\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    return {\r\n      ...state,\r\n      text: state.text.filter((item) => item.id !== action.id),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"EDIT\") {\r\n    const selectedItem = state.text.find((item) => item.id === action.id);\r\n    selectedItem.isEditing = true;\r\n    return { ...state };\r\n  }\r\n  if (action.type === \"EDIT-DONE\") {\r\n    state.text.map((item) => {\r\n      if (item.id === action.id) {\r\n        item.content = action.content;\r\n        item.isEditing = false;\r\n      }\r\n    });\r\n    return { ...state };\r\n  }\r\n  if (action.type === \"CLEAN\") {\r\n    return { text: [], coloumns: [], boards: [], logedIn: true };\r\n  }\r\n  if (action.type === \"CHANGE-PLACE\") {\r\n    state.text.map((item) => {\r\n      if (item.id === action.id) {\r\n        item.type = action.newType;\r\n      }\r\n    });\r\n    return { ...state };\r\n  }\r\n\r\n  if (action.type === \"ADD-COL\") {\r\n    const findItem = state.coloumns.find((item) => item === action.col);\r\n    const newColoumn = { text: action.text, type: action.model };\r\n    if (!findItem) {\r\n      return { ...state, coloumns: [...state.coloumns, newColoumn] };\r\n    }\r\n    return { ...state };\r\n  }\r\n  if (action.type === \"ADD-BOARD\") {\r\n    let newBoard = action.text;\r\n    return { ...state, boards: [...state.boards, newBoard] };\r\n  }\r\n  if (action.type === \"ENTER\") {\r\n    return {\r\n      ...state,\r\n      logedIn: true,\r\n      username: action.uname.uname,\r\n      id: action.uname.id,\r\n      pass: action.uname.pass,\r\n    };\r\n  }\r\n  if (action.type === \"EXIT\") {\r\n    return { ...state, logedIn: false };\r\n  }\r\n  if (action.type === \"SIGN-UP\") {\r\n    return { ...state, signingUp: !state.signingUp };\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}