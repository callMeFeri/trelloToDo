{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Feri\\\\Desktop\\\\react-projects-master\\\\01-birthday-reminder\\\\setup\\\\src\\\\Component.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const { edit, addTask, remove, state, editDone } = useGlobalContext();\n\nexport const Component = () => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => addTask({\n            text: e.target.value,\n            type: \"todo\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: addTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["Component","_jsxDEV","children","type","onChange","e","addTask","text","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Feri/Desktop/react-projects-master/01-birthday-reminder/setup/src/Component.js"],"sourcesContent":["// const { edit, addTask, remove, state, editDone } = useGlobalContext();\r\n\r\nexport const Component = () => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {/* todo */}\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => addTask({ text: e.target.value, type: \"todo\" })}\r\n          />\r\n          <button type=\"submit\" onClick={addTask}>\r\n            Add\r\n          </button>\r\n        </form>\r\n        <br />\r\n\r\n        {/* {state.text.map((task) => {\r\n            const { type, content, id, isEditing } = task;\r\n            if (type === \"todo\") {\r\n              return (\r\n                <div key={id}>\r\n                  {isEditing ? (\r\n                    <div>\r\n                      <form\r\n                        onSubmit={(e) =>\r\n                          editDone({ content: e.target.value, id: id })\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"text\"\r\n                          value={content}\r\n                          onChange={(e) =>\r\n                            addTask({ text: e.target.value, type: \"todo\" })\r\n                          }\r\n                        />\r\n                        <button type=\"submit\">done</button>\r\n                      </form>\r\n                    </div>\r\n                  ) : (\r\n                    <p>{content}</p>\r\n                  )}\r\n                  <button onClick={() => edit(id)}>edit</button>\r\n                  <button onClick={() => remove(id)}>remove</button>\r\n                  <br />\r\n                </div>\r\n              );\r\n            }\r\n          })} */}\r\n      </td>\r\n      {/* doing */}\r\n      {/* <td>\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => addTask({ text: e.target.value, type: \"doing\" })}\r\n            />\r\n            <button type=\"submit\" onClick={addTask}>\r\n              Add\r\n            </button>\r\n          </form>\r\n          <br />\r\n          {state.text.map((task) => {\r\n            const { type, content, id } = task;\r\n            if (type === \"doing\") {\r\n              return (\r\n                <div key={id}>\r\n                  {isEditing ? (\r\n                    <div>\r\n                      <form\r\n                        onSubmit={(e) =>\r\n                          editDone({ content: e.target.value, id: id })\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"text\"\r\n                          value={content}\r\n                          onChange={(e) =>\r\n                            addTask({ text: e.target.value, type: \"doing\" })\r\n                          }\r\n                        />\r\n                        <button type=\"submit\">done</button>\r\n                      </form>\r\n                    </div>\r\n                  ) : (\r\n                    <p>{content}</p>\r\n                  )}\r\n                  <button onClick={() => edit(id)}>edit</button>\r\n                  <button onClick={() => remove(id)}>remove</button>\r\n                  <br />\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </td>\r\n        <td>\r\n         \r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => addTask({ text: e.target.value, type: \"done\" })}\r\n            />\r\n            <button type=\"submit\" onClick={addTask}>\r\n              Add\r\n            </button>\r\n          </form>\r\n          <br />\r\n          {state.text.map((task) => {\r\n            const { type, content, id } = task;\r\n            if (type === \"done\") {\r\n              return (\r\n                <div key={id}>\r\n                  {isEditing ? (\r\n                    <div>\r\n                      <form\r\n                        onSubmit={(e) =>\r\n                          editDone({ content: e.target.value, id: id })\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"text\"\r\n                          value={content}\r\n                          onChange={(e) =>\r\n                            addTask({ text: e.target.value, type: \"done\" })\r\n                          }\r\n                        />\r\n                        <button type=\"submit\">done</button>\r\n                      </form>\r\n                    </div>\r\n                  ) : (\r\n                    <p>{content}</p>\r\n                  )}\r\n                  <button onClick={() => edit(id)}>edit</button>\r\n                  <button onClick={() => remove(id)}>remove</button>\r\n                  <br />\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </td> */}\r\n    </tr>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;;AAEA,OAAO,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAC7B,oBACEC,OAAA;IAAAC,QAAA,eACED,OAAA;MAAAC,QAAA,gBAEED,OAAA;QAAAC,QAAA,gBACED,OAAA;UACEE,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAGC,CAAC,IAAKC,OAAO,CAAC;YAAEC,IAAI,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK;YAAEN,IAAI,EAAE;UAAO,CAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACFZ,OAAA;UAAQE,IAAI,EAAC,QAAQ;UAACW,OAAO,EAAER,OAAQ;UAAAJ,QAAA,EAAC;QAExC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPZ,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkCJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA2FH,CAAC;AAET,CAAC;AAACE,EAAA,GA7IWf,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}